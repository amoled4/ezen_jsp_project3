package controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import domain.CommentVO;
import service.CommentService;
import service.CommentServiceImpl;


@WebServlet("/cmt/*")
public class CommentController extends HttpServlet {
	private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(CommentController.class);
    private int isOk;
    private CommentService csv;
    private CommentVO cvo;
    
    // 목적지 주소로 보내는 destPage 쓰지 않음
    // 비동기 통신으로 요청이 온 곳으로 돌려보냄
    
  
    public CommentController() {
    	csv = new CommentServiceImpl();
    }

	
	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setCharacterEncoding("utf-8");
		// contentType은 사용하지 않음
		
		// brd/list, brd/register?bno=${1} => cmt/post/1 : REST API 방식
		String uri = request.getRequestURI();
		log.info(uri);
		String pathUri = uri.substring("/cmt/".length());
		String path = pathUri;
		log.info(path);
		String pathVar = ""; 
		log.info(pathVar);
		if(pathUri.contains("/")) {
			path = pathUri.substring(0, pathUri.lastIndexOf("/"));
			pathVar = pathUri.substring(pathUri.lastIndexOf("/")+1);
		}
		
		switch(path) {
		case "post":
			try {
				// js에서 보낸 데이터를 StringBuffer로 읽어들이는 작업
				StringBuffer sb = new StringBuffer();
				String line="";
				BufferedReader br = request.getReader();  // 댓글 객체
				while((line = br.readLine()) != null) {   // 값이 남아있다면
					sb.append(line);
				}
				log.info(">>> sb : "+sb.toString());
				
				// 객체로 생성
				// JSON <-> text 변경 : parser
				JSONParser parser = new JSONParser();
				JSONObject jsonObj = (JSONObject) parser.parse(sb.toString());
				
				int bno = Integer.parseInt(jsonObj.get("bno").toString());
				String writer = jsonObj.get("writer").toString();
				String content = jsonObj.get("content").toString();
				cvo = new CommentVO(bno, writer, content);
				isOk = csv.post(cvo);
				log.info(">>> post > " +(isOk>0?"성공":"실패"));
				// 결과 전송
				PrintWriter out = response.getWriter();
				out.print(isOk);
				
			} catch (Exception e) {
				log.info(">>> comment post > error");
				e.printStackTrace();
			}
		}
	}

	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		service(request, response);
	}

}
